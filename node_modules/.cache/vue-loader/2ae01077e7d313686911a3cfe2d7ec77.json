{"remainingRequest":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/src/views/Dashboard/dashboardDefault.vue?vue&type=template&id=d3683e3c&scoped=true&","dependencies":[{"path":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/src/views/Dashboard/dashboardDefault.vue","mtime":1587869677478},{"path":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/B40A0B380A0AF760/xampp/htdocs/vuedash/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgY2xhc3M9ImRhc2hib2FyZERlZmF1bHQiPgogICAgPHYtY29udGFpbmVyIGZsdWlkPgogICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgPHYtY29sIGNvbHM9IjEyIiBjbGFzcz0icHktMCI+CiAgICAgICAgICAgICAgICA8aDE+V2VsY29tZSBiYWNrLCBKb2huIERvZSE8L2gxPgogICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSIxMiIgc209IjYiIG1kPSIzIiBsZz0iMyIgeGw9IjMiIHYtZm9yPSJjYXJkZGV0YWlsIGluIGNhcmRkZXRhaWxzIgogICAgICAgICAgICAgICAgOmtleT0iY2FyZGRldGFpbC5pZCI+CiAgICAgICAgICAgICAgICA8di1jYXJkPgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQtdGV4dD4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9IjEyIiB4cz0iMyIgc209IjMiIG1kPSIzIiBsZz0iMyIgeGw9IjMiIGNsYXNzPSJkLWZsZXgganVzdGlmeS1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24gOmNsYXNzPSJjYXJkZGV0YWlsLmNsYXNzIj57eyBjYXJkZGV0YWlsLmljb24gfX08L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSI3IiBzbT0iNyIgbWQ9IjciIGxnPSI3IiB4bD0iNyIgY2xhc3M9InB5LTAgcHgtMCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0icGItMCBoZWFkbGluZSI+e3sgY2FyZGRldGFpbC50aXRsZSB9fTwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNhcmQtdGV4dD57eyBjYXJkZGV0YWlsLnRleHQgfX08L3YtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LXJvdz4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1jb2w+CgogICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSIxMiIgc209IjEyIiBtZD0iOCIgbGc9IjgiIHhsPSI4Ij4KICAgICAgICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZC1mbGV4IGp1c3RpZnktc3BhY2UtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIFRvdGFsIFJldmVudWUKICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBjb2xvcj0icHJpbWFyeSI+TW9udGhseTwvdi1jaGlwPgogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICAgICAgICAgIDx2LWRpdmlkZXI+PC92LWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgICAgICAgICA8Y2FudmFzIGlkPSJ0b3RhbHJldmVudWUiIHN0eWxlPSJoZWlnaHQ6MjAwcHg7Ij48L2NhbnZhcz4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1jb2w+CgogICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSIxMiIgc209IjEyIiBtZD0iNCIgbGc9IjQiIHhsPSI0Ij4KICAgICAgICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZC1mbGV4IGp1c3RpZnktc3BhY2UtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIERhaWx5IEZlZWQKICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2hpcCBzbWFsbCBjb2xvcj0iaW5mbyI+VG9kYXk8L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10aXRsZT4KICAgICAgICAgICAgICAgICAgICA8di1kaXZpZGVyPjwvdi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQtdGV4dD4KICAgICAgICAgICAgICAgICAgICAgICAgSW5zZXJ0IGZlZWQgam9rZXMgaGVyZQogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgPC92LWNvbD4KCiAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgeHM9IjEyIiBzbT0iMTIiIG1kPSI0IiBsZz0iNCIgeGw9IjQiPgogICAgICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJkLWZsZXgganVzdGlmeS1zcGFjZS1iZXR3ZWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgQ2FsZW5kYXIKICAgICAgICAgICAgICAgICAgICAgICAgPHYtbWVudSBvZmZzZXQteT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uIH0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LW9uPSJvbiIgaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvbj5tb3JlX3ZlcnQ8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QgZGVuc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtIHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIGl0ZW1zIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBAY2xpY2s9ImFsZXJ0KCdhd2RhdycpIj57eyBpdGVtLnRpdGxlIH19PC92LWxpc3QtaXRlbS10aXRsZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1tZW51PgogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkLXRpdGxlPgogICAgICAgICAgICAgICAgICAgIDx2LWRpdmlkZXI+PC92LWRpdmlkZXI+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10ZXh0IGNsYXNzPSJwYS0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8di1zaGVldCBoZWlnaHQ9IjYwMCI+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY2FsZW5kYXIgcmVmPSJjYWxlbmRhciI+PC92LWNhbGVuZGFyPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDwvdi1zaGVldD4gLS0+CiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQtdGV4dD4KICAgICAgICAgICAgICAgIDwvdi1jYXJkPgogICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSIxMiIgc209IjEyIiBtZD0iNCIgbGc9IjQiIHhsPSI0Ij4KICAgICAgICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZC1mbGV4IGp1c3RpZnktc3BhY2UtYmV0d2VlbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIFdlZWtseSBTYWxlcwogICAgICAgICAgICAgICAgICAgICAgICA8di1tZW51IG9mZnNldC15PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9Insgb24gfSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtb249Im9uIiBpY29uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1pY29uPm1vcmVfdmVydDwvdi1pY29uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdCBkZW5zZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0gdi1mb3I9IihpdGVtLCBpbmRleCkgaW4gaXRlbXMiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIEBjbGljaz0iYWxlcnQoJ2F3ZGF3JykiPnt7IGl0ZW0udGl0bGUgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgICAgICAgICAgPHYtZGl2aWRlcj48L3YtZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxjYW52YXMgaWQ9IndlZWtseXNhbGVzIiBoZWlnaHQ9IjQwMHB4Ij48L2NhbnZhcz4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgeHM9IjEyIiBzbT0iMTIiIG1kPSI0IiBsZz0iNCIgeGw9IjQiPgogICAgICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJkLWZsZXgganVzdGlmeS1zcGFjZS1iZXR3ZWVuIj4KICAgICAgICAgICAgICAgICAgICAgICAgQXBwb2ludG1lbnRzCiAgICAgICAgICAgICAgICAgICAgICAgIDx2LW1lbnUgb2Zmc2V0LXk+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGUgdi1zbG90OmFjdGl2YXRvcj0ieyBvbiB9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1idG4gdi1vbj0ib24iIGljb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWljb24+bW9yZV92ZXJ0PC92LWljb24+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0IGRlbnNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbSB2LWZvcj0iKGl0ZW0sIGluZGV4KSBpbiBpdGVtcyIgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0tdGl0bGUgQGNsaWNrPSJhbGVydCgnYXdkYXcnKSI+e3sgaXRlbS50aXRsZSB9fTwvdi1saXN0LWl0ZW0tdGl0bGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWxpc3QtaXRlbT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0PgogICAgICAgICAgICAgICAgICAgICAgICA8L3YtbWVudT4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10aXRsZT4KICAgICAgICAgICAgICAgICAgICA8di1kaXZpZGVyPjwvdi1kaXZpZGVyPgogICAgICAgICAgICAgICAgICAgIDx2LWNhcmQtdGV4dCBjbGFzcz0icGEtMCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRpbWVsaW5lIGFsaWduLXRvcCBkZW5zZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXRpbWVsaW5lLWl0ZW0gY29sb3I9InBpbmsiIHNtYWxsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LXJvdz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9IjMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz41cG08L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5OZXcgSWNvbjwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FwdGlvbiI+TW9iaWxlIEFwcDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtdGltZWxpbmUtaXRlbT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10aW1lbGluZS1pdGVtIGNvbG9yPSJ0ZWFsIGxpZ2h0ZW4tMyIgc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPjMtNHBtPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1jb2w+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdHJvbmc+RGVzaWduIFN0YW5kIFVwPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXB0aW9uIG1iLTIiPkhhbmdvdXRzPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1hdmF0YXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaW1nCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNyYz0iaHR0cHM6Ly9hdmF0YWFhcnMuaW8vP2F2YXRhclN0eWxlPUNpcmNsZSZ0b3BUeXBlPUxvbmdIYWlyRnJpZGEmYWNjZXNzb3JpZXNUeXBlPUt1cnQmaGFpckNvbG9yPVJlZCZmYWNpYWxIYWlyVHlwZT1CZWFyZExpZ2h0JmZhY2lhbEhhaXJDb2xvcj1Ccm93bkRhcmsmY2xvdGhlVHlwZT1HcmFwaGljU2hpcnQmY2xvdGhlQ29sb3I9R3JheTAxJmdyYXBoaWNUeXBlPVNrdWxsJmV5ZVR5cGU9V2luayZleWVicm93VHlwZT1SYWlzZWRFeGNpdGVkTmF0dXJhbCZtb3V0aFR5cGU9RGlzYmVsaWVmJnNraW5Db2xvcj1Ccm93biI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWltZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1hdmF0YXI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1hdmF0YXI+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWltZwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzcmM9Imh0dHBzOi8vYXZhdGFhYXJzLmlvLz9hdmF0YXJTdHlsZT1DaXJjbGUmdG9wVHlwZT1TaG9ydEhhaXJGcml6emxlJmFjY2Vzc29yaWVzVHlwZT1QcmVzY3JpcHRpb24wMiZoYWlyQ29sb3I9QmxhY2smZmFjaWFsSGFpclR5cGU9TW91c3RhY2hlTWFnbnVtJmZhY2lhbEhhaXJDb2xvcj1Ccm93bkRhcmsmY2xvdGhlVHlwZT1CbGF6ZXJTd2VhdGVyJmNsb3RoZUNvbG9yPUJsYWNrJmV5ZVR5cGU9RGVmYXVsdCZleWVicm93VHlwZT1GbGF0TmF0dXJhbCZtb3V0aFR5cGU9RGVmYXVsdCZza2luQ29sb3I9VGFubmVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtaW1nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWF2YXRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWF2YXRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1pbWcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3JjPSJodHRwczovL2F2YXRhYWFycy5pby8/YXZhdGFyU3R5bGU9Q2lyY2xlJnRvcFR5cGU9TG9uZ0hhaXJNaWFXYWxsYWNlJmFjY2Vzc29yaWVzVHlwZT1TdW5nbGFzc2VzJmhhaXJDb2xvcj1CbG9uZGVHb2xkZW4mZmFjaWFsSGFpclR5cGU9QmxhbmsmY2xvdGhlVHlwZT1CbGF6ZXJTd2VhdGVyJmV5ZVR5cGU9U3VycHJpc2VkJmV5ZWJyb3dUeXBlPVJhaXNlZEV4Y2l0ZWQmbW91dGhUeXBlPVNtaWxlJnNraW5Db2xvcj1QYWxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtaW1nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWF2YXRhcj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRpbWVsaW5lLWl0ZW0+CgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtdGltZWxpbmUtaXRlbSBjb2xvcj0icGluayIgc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1jb2wgY29scz0iMyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Ryb25nPjEycG08L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5MdW5jaCBicmVhazwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtY29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1yb3c+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtdGltZWxpbmUtaXRlbT4KCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di10aW1lbGluZS1pdGVtIGNvbG9yPSJ0ZWFsIGxpZ2h0ZW4tMyIgc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtcm93IGNsYXNzPSJwdC0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sIGNvbHM9IjMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz45LTExYW08L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtY29sPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN0cm9uZz5GaW5pc2ggSG9tZSBTY3JlZW48L3N0cm9uZz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcHRpb24iPldlYiBBcHA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3Ytcm93PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC92LXRpbWVsaW5lLWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdi10aW1lbGluZT4KICAgICAgICAgICAgICAgICAgICA8L3YtY2FyZC10ZXh0PgogICAgICAgICAgICAgICAgPC92LWNhcmQ+CiAgICAgICAgICAgIDwvdi1jb2w+CgogICAgICAgICAgICA8di1jb2wgY29scz0iMTIiIHhzPSIxMiIgc209IjEyIiBtZD0iOCIgbGc9IjgiIHhsPSI4Ij4KICAgICAgICAgICAgICAgIDx2LWNhcmQ+CiAgICAgICAgICAgICAgICAgICAgPHYtY2FyZC10aXRsZSBjbGFzcz0iZC1mbGV4IGp1c3RpZnktc3BhY2UtYmV0d2VlbiI+TGF0ZXN0IFByb2plY3RzIDx2LXNwYWNlcj48L3Ytc3BhY2VyPgogICAgICAgICAgICAgICAgICAgICAgICA8di1tZW51IG9mZnNldC15PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlIHYtc2xvdDphY3RpdmF0b3I9Insgb24gfSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtYnRuIHYtb249Im9uIiBpY29uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1pY29uPm1vcmVfdmVydDwvdi1pY29uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdCBkZW5zZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8di1saXN0LWl0ZW0gdi1mb3I9IihpdGVtLCBpbmRleCkgaW4gaXRlbXMiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtLXRpdGxlIEBjbGljaz0iYWxlcnQoJ2F3ZGF3JykiPnt7IGl0ZW0udGl0bGUgfX08L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgICAgICAgICAgPHYtZGl2aWRlcj48L3YtZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICA8di1kYXRhLXRhYmxlIDpoZWFkZXJzPSJoZWFkZXIiIDppdGVtcz0icHJvamVjdCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6aXRlbS5zdGF0dXM9InsgaXRlbSB9Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgdi1pZj0iaXRlbS5zdGF0dXMgPT0gJ0RvbmUnIiBjb2xvcj0ic3VjY2VzcyIgc21hbGw+e3sgaXRlbS5zdGF0dXMgfX08L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgdi1pZj0iaXRlbS5zdGF0dXMgPT0gJ1BlbmRpbmcnIiBjb2xvcj0icHJpbWFyeSIgc21hbGw+e3sgaXRlbS5zdGF0dXMgfX08L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgdi1pZj0iaXRlbS5zdGF0dXMgPT0gJ0NhbmNlbGxlZCciIGNvbG9yPSJlcnJvciIgc21hbGw+e3sgaXRlbS5zdGF0dXMgfX08L3YtY2hpcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWNoaXAgdi1pZj0iaXRlbS5zdGF0dXMgPT0gJ0luIFByb2dyZXNzJyIgY29sb3I9Indhcm5pbmciIHNtYWxsPnt7IGl0ZW0uc3RhdHVzIH19PC92LWNoaXA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPC92LWRhdGEtdGFibGU+CiAgICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgPC92LWNvbD4KCiAgICAgICAgICAgIDx2LWNvbCBjb2xzPSIxMiIgeHM9IjEyIiBzbT0iMTIiIG1kPSI0IiBsZz0iNCIgeGw9IjQiPgogICAgICAgICAgICAgICAgPHYtY2FyZD4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRpdGxlIGNsYXNzPSJkLWZsZXgganVzdGlmeS1zcGFjZS1iZXR3ZWVuIj5TYWxlcyAvIFJldmVudWU8di1zcGFjZXI+PC92LXNwYWNlcj4KICAgICAgICAgICAgICAgICAgICAgICAgPHYtbWVudSBvZmZzZXQteT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LXNsb3Q6YWN0aXZhdG9yPSJ7IG9uIH0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWJ0biB2LW9uPSJvbiIgaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtaWNvbj5tb3JlX3ZlcnQ8L3YtaWNvbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtYnRuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QgZGVuc2U+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHYtbGlzdC1pdGVtIHYtZm9yPSIoaXRlbSwgaW5kZXgpIGluIGl0ZW1zIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx2LWxpc3QtaXRlbS10aXRsZSBsaW5rIHJvdXRlciA6dG89Iml0ZW0ucm91dGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgaXRlbS50aXRsZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdC1pdGVtLXRpdGxlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdi1saXN0LWl0ZW0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3YtbGlzdD4KICAgICAgICAgICAgICAgICAgICAgICAgPC92LW1lbnU+CiAgICAgICAgICAgICAgICAgICAgPC92LWNhcmQtdGl0bGU+CiAgICAgICAgICAgICAgICAgICAgPHYtZGl2aWRlcj48L3YtZGl2aWRlcj4KICAgICAgICAgICAgICAgICAgICA8di1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICAgICAgICAgIEluc2VydCBiYXIgY2hhcnQgam9rZXMgaGVyZQogICAgICAgICAgICAgICAgICAgIDwvdi1jYXJkLXRleHQ+CiAgICAgICAgICAgICAgICA8L3YtY2FyZD4KICAgICAgICAgICAgPC92LWNvbD4KICAgICAgICA8L3Ytcm93PgogICAgPC92LWNvbnRhaW5lcj4KPC9kaXY+Cg=="},null]}